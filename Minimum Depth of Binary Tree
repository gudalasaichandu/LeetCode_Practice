#111. Minimum Depth of Binary Tree

##My Solution using level order Traversal

class Solution:
    def minDepth(self, root: TreeNode) -> int:
        if not root:
            return 0
        level=1
        stack=[root]
        
        while len(stack)!=0:
            x=len(stack)
            for i in range(x):
                a=stack.pop(0)
                
                if a.left:
                    stack.append(a.left)
                if a.right:
                    stack.append(a.right)
                if not a.left and not a.right:
                    return level
            level+=1
            
Example:

Given binary tree [3,9,20,null,null,15,7],

    3
   / \
  9  20
    /  \
   15   7
return its minimum depth = 2.
